Problem Description
Given two sorted integer arrays A and B, merge B and A as one sorted array and return it as an output.

Note: A linear time complexity is expected and you should avoid use of any library function.


Problem Constraints
-2×109 <= A[i], B[i] <= 2×109
1 <= |A|, |B| <= 5×104


Input Format
First Argument is a 1-D array representing  A.
Second Argument is also a 1-D array representing B.


Output Format
Return a 1-D vector which you got after merging A and B.


Example Input
Input 1:

A = [4, 7, 9]
B = [2, 11, 19]
Input 2:

A = [1]
B = [2]


Example Output
Output 1:

[2, 4, 7, 9, 11, 19]
Output 2:

[1, 2]


Example Explanation
Explanation 1:

Merging A and B produces the output as described above.
Explanation 2:

 Merging A and B produces the output as described above.


SOLUTION

class Solution:
    # @param A : tuple of integers
    # @param B : tuple of integers
    # @return a list of integers
    def solve(self, A, B):
        ptrA,ptrB = 0,0
        res = []

        while ptrA < len(A) and ptrB < len(B):
            if A[ptrA] <= B[ptrB]:
                res.append(A[ptrA])
                ptrA += 1
            else:
                res.append(B[ptrB])
                ptrB += 1
        while ptrA < len(A):
            res.append(A[ptrA])
            ptrA += 1
        while ptrB < len(B):
            res.append(B[ptrB])
            ptrB += 1
        return res
        
