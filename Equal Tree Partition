Problem Description

Given a binary tree A. Check whether it is possible to partition the tree to two trees which have equal sum of values after removing exactly one edge on the original tree.



Problem Constraints

1 <= size of tree <= 100000




0 <= value of node <= 109



Input Format

First and only argument is head of tree A.



Output Format

Return 1 if the tree can be partitioned into two trees of equal sum else return 0.



Example Input

Input 1:

 
                5
               /  \
              3    7
             / \  / \
            4  6  5  6
Input 2:

 
                1
               / \
              2   10
                  / \
                 20  2


Example Output

Output 1:

 1
Output 2:

 0


Example Explanation

Explanation 1:

 Remove edge between 5(root node) and 7: 
        Tree 1 =                                               Tree 2 =
                        5                                                     7
                       /                                                     / \
                      3                                                     5   6    
                     / \
                    4   6
        Sum of Tree 1 = Sum of Tree 2 = 18
Explanation 2:

 The given Tree cannot be partitioned.


SOLUTION

# Definition for a  binary tree node
# class TreeNode:
#    def __init__(self, x):
#        self.val = x
#        self.left = None
#        self.right = None
import sys

sys.setrecursionlimit(10**6) 
class Solution:
    # @param A : root node of tree
    # @return an integer
    def sumtree(self,root):
        if not root:
            return 0
        left = self.sumtree(root.left)
        right = self.sumtree(root.right)
        return left + right + root.val

    def checkhalf(self,root,totalsum):
        if not root:
            return False
        left = self.sumtree(root.left)
        right = self.sumtree(root.right)

        if left == totalsum // 2 or right == totalsum // 2:
            return True
        if self.checkhalf(root.left,totalsum) or self.checkhalf(root.right,totalsum):
            return True
        return False
    
    def solve(self, A):
        if not A:
            return 0
        
        totalsum = self.sumtree(A)

        if totalsum % 2 == 1:
            return 0
        return 1 if self.checkhalf(A,totalsum) else 0


